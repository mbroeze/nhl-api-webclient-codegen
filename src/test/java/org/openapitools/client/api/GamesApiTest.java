/*
 * NHL API
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import java.math.BigDecimal;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Game;
import org.openapitools.client.model.GameBoxscores;
import org.openapitools.client.model.GameContent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for GamesApi
 */
@Ignore
public class GamesApiTest {

    private final GamesApi api = new GamesApi();

    
    /**
     * Get all available data for an NHL game.
     *
     * This contains all data related to a game, from the boxscore, to play data and even on-ice coordinates. Be forewarned that, depending on the game, this endpoint can return a **lot** of data.
     */
    @Test
    public void getGameTest()  {
        BigDecimal id = null;
        Game response = api.getGame(id).block();

        // TODO: test validations
    }
    
    /**
     * Get the boxscore for an NHL game.
     *
     * If you want detailed play information, you should use &#x60;/game/{id}/feed/live&#x60; or &#x60;/game/{id}/feed/live/diffPatch&#x60;.
     */
    @Test
    public void getGameBoxscoreTest()  {
        BigDecimal id = null;
        GameBoxscores response = api.getGameBoxscore(id).block();

        // TODO: test validations
    }
    
    /**
     * Get editorials, video replays and photo highlights for an NHL game.
     *
     * 
     */
    @Test
    public void getGameContentTest()  {
        BigDecimal id = null;
        GameContent response = api.getGameContent(id).block();

        // TODO: test validations
    }
    
    /**
     * Get all available data for an NHL game after a specific time.
     *
     * You can use this to return a small subset of data relating to game.
     */
    @Test
    public void getGameDiffTest()  {
        BigDecimal id = null;
        String startTimeCode = null;
        Game response = api.getGameDiff(id, startTimeCode).block();

        // TODO: test validations
    }
    
}
